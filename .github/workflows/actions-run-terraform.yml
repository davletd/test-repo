name: Terraform Plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'

# Permissions needed to interact with GitHub Actions
permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    # Use a default working directory where Terraform files are located
    defaults:
      run:
        working-directory: ./terraform

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Azure Login Step - MOST IMPORTANT
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7  # Specify your desired Terraform version
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Add step to install envsubst (part of gettext)
      - name: Install gettext
        run: sudo apt-get update && sudo apt-get install -y gettext

      # Replace secrets in template file
      - name: Replace Secrets in Terraform Variables
        env:
          # List all your secrets here
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          #DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          envsubst < azure.auto.tfvars.tpl > azure.auto.tfvars

      # Initialize Terraform
      - name: Terraform Init
        id: init
        run: terraform init
        
      # Validate Terraform configuration
      - name: Terraform Validate
        id: validate
        run: terraform validate

      # Run Terraform Plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      # Add a comment to the pull request with the Terraform plan output
      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # Fail the workflow if Terraform plan fails
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1